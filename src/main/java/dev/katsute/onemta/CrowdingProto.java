// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs-realtime-crowding.proto

package dev.katsute.onemta;

@SuppressWarnings("all")
abstract class CrowdingProto {
  private CrowdingProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(dev.katsute.onemta.CrowdingProto.crowdingDescriptor);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CrowdingDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:transit_realtime.CrowdingDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * raw count of passengers onboard vehicle
     * </pre>
     *
     * <code>optional int32 estimated_count = 1;</code>
     * @return Whether the estimatedCount field is set.
     */
    boolean hasEstimatedCount();
    /**
     * <pre>
     * raw count of passengers onboard vehicle
     * </pre>
     *
     * <code>optional int32 estimated_count = 1;</code>
     * @return The estimatedCount.
     */
    int getEstimatedCount();

    /**
     * <pre>
     * estimated capacity of vehicle considering current
     * crowding restrictions
     * </pre>
     *
     * <code>optional int32 estimated_capacity = 2;</code>
     * @return Whether the estimatedCapacity field is set.
     */
    boolean hasEstimatedCapacity();
    /**
     * <pre>
     * estimated capacity of vehicle considering current
     * crowding restrictions
     * </pre>
     *
     * <code>optional int32 estimated_capacity = 2;</code>
     * @return The estimatedCapacity.
     */
    int getEstimatedCapacity();
  }
  /**
   * <pre>
   * crowding information in raw form.  This allows
   * for more flexibility then levels and percents.
   * Note that either count or capacity may be missing!!!
   * </pre>
   *
   * Protobuf type {@code transit_realtime.CrowdingDescriptor}
   */
  public static final class CrowdingDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:transit_realtime.CrowdingDescriptor)
      CrowdingDescriptorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CrowdingDescriptor.newBuilder() to construct.
    private CrowdingDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CrowdingDescriptor() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CrowdingDescriptor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.katsute.onemta.CrowdingProto.internal_static_transit_realtime_CrowdingDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.katsute.onemta.CrowdingProto.internal_static_transit_realtime_CrowdingDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.class, dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.Builder.class);
    }

    private int bitField0_;
    public static final int ESTIMATED_COUNT_FIELD_NUMBER = 1;
    private int estimatedCount_;
    /**
     * <pre>
     * raw count of passengers onboard vehicle
     * </pre>
     *
     * <code>optional int32 estimated_count = 1;</code>
     * @return Whether the estimatedCount field is set.
     */
    @java.lang.Override
    public boolean hasEstimatedCount() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * raw count of passengers onboard vehicle
     * </pre>
     *
     * <code>optional int32 estimated_count = 1;</code>
     * @return The estimatedCount.
     */
    @java.lang.Override
    public int getEstimatedCount() {
      return estimatedCount_;
    }

    public static final int ESTIMATED_CAPACITY_FIELD_NUMBER = 2;
    private int estimatedCapacity_;
    /**
     * <pre>
     * estimated capacity of vehicle considering current
     * crowding restrictions
     * </pre>
     *
     * <code>optional int32 estimated_capacity = 2;</code>
     * @return Whether the estimatedCapacity field is set.
     */
    @java.lang.Override
    public boolean hasEstimatedCapacity() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * estimated capacity of vehicle considering current
     * crowding restrictions
     * </pre>
     *
     * <code>optional int32 estimated_capacity = 2;</code>
     * @return The estimatedCapacity.
     */
    @java.lang.Override
    public int getEstimatedCapacity() {
      return estimatedCapacity_;
    }

    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dev.katsute.onemta.CrowdingProto.CrowdingDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * crowding information in raw form.  This allows
     * for more flexibility then levels and percents.
     * Note that either count or capacity may be missing!!!
     * </pre>
     *
     * Protobuf type {@code transit_realtime.CrowdingDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:transit_realtime.CrowdingDescriptor)
        dev.katsute.onemta.CrowdingProto.CrowdingDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dev.katsute.onemta.CrowdingProto.internal_static_transit_realtime_CrowdingDescriptor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dev.katsute.onemta.CrowdingProto.internal_static_transit_realtime_CrowdingDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.class, dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.Builder.class);
      }

      // Construct using dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        estimatedCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        estimatedCapacity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dev.katsute.onemta.CrowdingProto.internal_static_transit_realtime_CrowdingDescriptor_descriptor;
      }

      @java.lang.Override
      public dev.katsute.onemta.CrowdingProto.CrowdingDescriptor getDefaultInstanceForType() {
        return dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.getDefaultInstance();
      }

      @java.lang.Override
      public dev.katsute.onemta.CrowdingProto.CrowdingDescriptor build() {
        dev.katsute.onemta.CrowdingProto.CrowdingDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dev.katsute.onemta.CrowdingProto.CrowdingDescriptor buildPartial() {
        dev.katsute.onemta.CrowdingProto.CrowdingDescriptor result = new dev.katsute.onemta.CrowdingProto.CrowdingDescriptor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.estimatedCount_ = estimatedCount_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.estimatedCapacity_ = estimatedCapacity_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private int estimatedCount_ ;
      /**
       * <pre>
       * raw count of passengers onboard vehicle
       * </pre>
       *
       * <code>optional int32 estimated_count = 1;</code>
       * @return Whether the estimatedCount field is set.
       */
      @java.lang.Override
      public boolean hasEstimatedCount() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * raw count of passengers onboard vehicle
       * </pre>
       *
       * <code>optional int32 estimated_count = 1;</code>
       * @return The estimatedCount.
       */
      @java.lang.Override
      public int getEstimatedCount() {
        return estimatedCount_;
      }
      /**
       * <pre>
       * raw count of passengers onboard vehicle
       * </pre>
       *
       * <code>optional int32 estimated_count = 1;</code>
       * @param value The estimatedCount to set.
       * @return This builder for chaining.
       */
      public Builder setEstimatedCount(int value) {
        bitField0_ |= 0x00000001;
        estimatedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * raw count of passengers onboard vehicle
       * </pre>
       *
       * <code>optional int32 estimated_count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEstimatedCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        estimatedCount_ = 0;
        onChanged();
        return this;
      }

      private int estimatedCapacity_ ;
      /**
       * <pre>
       * estimated capacity of vehicle considering current
       * crowding restrictions
       * </pre>
       *
       * <code>optional int32 estimated_capacity = 2;</code>
       * @return Whether the estimatedCapacity field is set.
       */
      @java.lang.Override
      public boolean hasEstimatedCapacity() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * estimated capacity of vehicle considering current
       * crowding restrictions
       * </pre>
       *
       * <code>optional int32 estimated_capacity = 2;</code>
       * @return The estimatedCapacity.
       */
      @java.lang.Override
      public int getEstimatedCapacity() {
        return estimatedCapacity_;
      }
      /**
       * <pre>
       * estimated capacity of vehicle considering current
       * crowding restrictions
       * </pre>
       *
       * <code>optional int32 estimated_capacity = 2;</code>
       * @param value The estimatedCapacity to set.
       * @return This builder for chaining.
       */
      public Builder setEstimatedCapacity(int value) {
        bitField0_ |= 0x00000002;
        estimatedCapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * estimated capacity of vehicle considering current
       * crowding restrictions
       * </pre>
       *
       * <code>optional int32 estimated_capacity = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEstimatedCapacity() {
        bitField0_ = (bitField0_ & ~0x00000002);
        estimatedCapacity_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:transit_realtime.CrowdingDescriptor)
    }

    // @@protoc_insertion_point(class_scope:transit_realtime.CrowdingDescriptor)
    private static final dev.katsute.onemta.CrowdingProto.CrowdingDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dev.katsute.onemta.CrowdingProto.CrowdingDescriptor();
    }

    public static dev.katsute.onemta.CrowdingProto.CrowdingDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CrowdingDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<CrowdingDescriptor>() {
      @java.lang.Override
      public CrowdingDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CrowdingDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CrowdingDescriptor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dev.katsute.onemta.CrowdingProto.CrowdingDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int CROWDING_DESCRIPTOR_FIELD_NUMBER = 1006;
  /**
   * <code>extend .transit_realtime.VehiclePosition { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      dev.katsute.onemta.GTFSRealtimeProto.VehiclePosition,
      dev.katsute.onemta.CrowdingProto.CrowdingDescriptor> crowdingDescriptor = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.class,
        dev.katsute.onemta.CrowdingProto.CrowdingDescriptor.getDefaultInstance());
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_transit_realtime_CrowdingDescriptor_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_transit_realtime_CrowdingDescriptor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034gtfs-realtime-crowding.proto\022\020transit_" +
      "realtime\032\023gtfs-realtime.proto\"I\n\022Crowdin" +
      "gDescriptor\022\027\n\017estimated_count\030\001 \001(\005\022\032\n\022" +
      "estimated_capacity\030\002 \001(\005:e\n\023crowding_des" +
      "criptor\022!.transit_realtime.VehiclePositi" +
      "on\030\356\007 \001(\0132$.transit_realtime.CrowdingDes" +
      "criptorB%\n\022dev.katsute.onemtaB\rCrowdingP" +
      "rotoH\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          dev.katsute.onemta.GTFSRealtimeProto.getDescriptor(),
        });
    internal_static_transit_realtime_CrowdingDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_transit_realtime_CrowdingDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_transit_realtime_CrowdingDescriptor_descriptor,
        new java.lang.String[] { "EstimatedCount", "EstimatedCapacity", });
    crowdingDescriptor.internalInit(descriptor.getExtensions().get(0));
    dev.katsute.onemta.GTFSRealtimeProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
